// this is used mainly for threads
.link,
.search-result-link {
    background-repeat: no-repeat;
    background-position: right -38px;
    padding: 0;
    margin: 0;
    border-bottom-width: 0 !important;
    position: relative;
    @extend %flexbox;

    &:nth-last-child(2) {
        border-bottom-width: 1px !important;
    }

    // fake border at the bottom, for easier manipulation
    .parent,
    &::after {
        position: absolute;
        left: -1px;
        bottom: -1px;
        right: -1px;
        border-top: 1px solid lighten(rgba($color-secondary, 1), 5%);
        z-index: 10;
    }

    .parent {
        display: none;
        bottom: auto;
        padding-bottom: $gutter-size;
        border-bottom: 1px solid $color-secondary;
        top: (-$gutter-size * 2 - 2px);
    }

    &.last-clicked {
        border-style: solid;
        border-color: lighten(rgba($color-secondary, 1), 8%) !important;
        overflow: visible;

        &::after {
            content: '';
        }
    }

    &.thing.visited {
        a.title {
            @extend a.title:visited;
        }
    }

    // make all direct child element un-shrinkable
    > * {
        flex-shrink: 0;
    }

    // container for upvotes and downvotes
    .midcol {
        padding: round($gutter-size * 1.6) 4px 0;
        background: $content-bg;
        border-right: 3px solid rgba($color-muted, .25);
    }

    // first selector is used for styling search result
    .thumbnail + div,
    .entry {
        padding: ($gutter-size - 2px) $gutter-size ($gutter-size - 2px) 0;
        margin: 0;
        flex-grow: 1;
        flex-shrink: 1;
    }
    
    // hide rank number and user flair
    .rank {
        @extend %hide;
    }

    // stylize author of the thread
    .author {
        font-weight: bold;
        @extend %text-muted;
    }

    // content
    .usertext-body {
        .md {
            background: transparent;
            border: none;
            border-radius: 0;
            padding: 0;
            margin: 0;
        }
    }

    // add an icon, which would indicate that thread is locked
    &.locked {
        .first + li {
            position: relative;
            padding-left: $icon-lock-width + $gutter-size;

            &::before {
                content: '';
                position: absolute;
                left: round($icon-lock-width / 2);
                top: 0;
                bottom: 0;
                margin: auto;
                @include sprite($icon-lock);
            }
        }
    }

    // stickied threads
    &.stickied {
        + .clearleft {
            + .link {
                // change border color of the fake bottom border
                .parent {
                    border-top-color: rgba($color-green, .5);
                }

                // add a space between the last stickied post and the rest threads
                &:not(.stickied) {
                    margin-top: ($gutter-size * 2 + 1px);

                    .parent {
                        border-bottom-width: 1px;
                        padding-bottom: $gutter-size;
                        display: block;
                    }
                }
            }
        }

        .midcol {
            background: rgba($color-green, .15);
        }

        // change the title color of the threads
        &.thing {
            .title,
            a.title {
                @extend %text-green;

                &:hover {
                    color: lighten($color-green, 10%);
                }
            }
        }
    }

    // spoiler-tagged threads
    &.spoiler,
    &.nsfw,
    &[class*="wonderstorm"] {
        // add an accented background for these threads
        &::before {
            content: '';
            background: linear-gradient(to left, rgba($color-primary, .08), rgba($color-primary, 0) 75%);
            position: absolute;
            bottom: 0;
            right: 0;
            left: 0;
            top: 0;
            z-index: -1;
        }
    }

    // differentiate NSFW posts from the ones marked as spoilery
    &.nsfw {
        &::before {
            background: linear-gradient(to left, rgba($color-red, .1), rgba($color-red, 0) 75%);
        }
    }

    &[class*="wonderstorm"] {
        &::before {
            background: linear-gradient(to left, rgba($color-brand-wonderstorm, .07), rgba($color-brand-wonderstorm, 0) 75%);
        }

        &.stickied {
            background-image: url(../img/thread/thread-wonderstorm.png);
        }
    }

    // tweaks for the comments page
    .comments-page & {
        border-bottom-width: 1px !important;

        &::after {
            content: none;
        }
    }
}

.link {
    body:not(.listing-page) & {
        border-bottom-width: 1px !important;

        + .clearleft + .link {
            margin-top: $gutter-size;
        }
    }
}

// "(self.subreddit)" thing you see after each thread's title
.domain {
    font-size: 0;
    line-height: 1;
    vertical-align: middle;

    .content .link:not(.self) & {
        a {
            font-size: 10px;
            opacity: 0.5;
            @extend %text-muted;
        }
    }
}

// overlay over the thumbnail
.duration-overlay {
    font-size: .7rem;
    font-weight: bold;
    line-height: 1.5;
}

// approval checkmark next to the title (visible only to mods)
.approval-checkmark {
    @extend %hide;

    ~ .domain {
        &::before {
            content: '';
            display: inline-block;
            vertical-align: middle;
            margin: -4px 8px 0 -4px;
            @include sprite-position($icon-checkmark);
            @include sprite-width($icon-checkmark);
            @include sprite-height($icon-checkmark);
            @extend %sprite-image;
        }
    }
}

// search link
div.search-result-link {
    @extend %container;

    // hide user flairs
    .flair {
        @extend %hide;
    }

    &.visited {
        .search-title {
            @extend a.title:visited;
        }
    }
    
    .search-link {
        @extend %anchor-link;
    }

    .search-comments,
    .search-subreddit-link {
        @extend %text-muted;
    }

    :link {
        > mark {
            color: $color-white;
        }
    }

    :visited {
        > mark {
            color: $color-muted;
        }
    }
}

.search-expando,
.search-result-footer {
    margin-top: ($gutter-size / 2);
}

.search-expando {
    &.collapsed::before {
        background: linear-gradient(to top, $color-secondary, transparent);
    }
}

.search-expando-button {
    margin-top: ($gutter-size / 2);
    @extend %anchor-link;
}
